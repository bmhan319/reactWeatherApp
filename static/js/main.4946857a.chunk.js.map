{"version":3,"sources":["Components/InputLocation.js","Components/CurrentWeatherEmpty.js","Components/CurrentWeather.js","Components/Forecast.js","Components/UVIndex.js","Components/Details.js","App.js","serviceWorker.js","index.js"],"names":["InputLocation","props","className","onSubmit","getWeather","name","type","placeholder","CurrentWeatherEmpty","CurrentWeather","state","location","date","src","icon","alt","temp","hi","low","humidity","condition","Forecast","day1","day2","day3","day4","day5","UVIndex","fill","uvColor","width","height","viewBox","xmlns","d","uvLevel","Details","sunrise","sunset","pressure","id","wind","API_KEY","process","App","undefined","moment","Date","format","timezone","error","userLat","userLon","isDay","time","split","wrapper","document","querySelector","textColor","querySelectorAll","classList","add","remove","forEach","el","getTimeZone","tz","getUV","uv","convertUTC","utcTime","offset","utcOffset","getForecast","apiData","list","filter","dt_txt","event","a","preventDefault","city","target","elements","value","patternNum","RegExp","patternABC","emptyWeather","currentWeather","test","fetch","api_call","api_zip_forecast","json","zipData","zipForecast","coord","lat","lon","uvIndex","uvData","timeOfDay","trueForecast","setState","weather","description","Math","floor","main","temp_max","temp_min","toUpperCase","slice","sys","speed","api_forecast","weatherData","forecastData","alert","this","Component","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4946857a.chunk.js","sourcesContent":["import React from 'react';\n\nconst InputLocation = (props) => {\n  return(\n    <div className=\"location-field-wrapper\">\n      <form className=\"location-form\" onSubmit={props.getWeather}>\n        <input className=\"location-input text-color\" name=\"city\" type=\"text\" placeholder=\"Enter City or Zip\"></input>\n        <button className=\"location-submit text-color\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default InputLocation;","import React from 'react'\n\nconst CurrentWeatherEmpty = () => {\n  return(\n    <div className=\"current-weather-empty-wrapper\">\n      <p className=\"current-weather-empty-text\">Please enter a City or a <br />ZipCode to get the weather.</p>\n    </div>\n  )\n}\n\nexport default CurrentWeatherEmpty","import React from 'react';\n\nconst CurrentWeather = (props) => {\n  return(\n    <div className=\"current-weather-wrapper hide\">\n      <div className=\"current-location-container\">\n        <p className=\"current-location text-color\">{props.state.location}</p>\n      </div>\n      <div className=\"date-container\">\n        <p className=\"date text-color\">{props.state.date}</p>\n      </div>\n      <div className=\"weather-container\">\n          <div className=\"weather-row1\">\n            <img className=\"weather-icon\" src={`https://openweathermap.org/img/wn/${props.state.icon}@2x.png`} alt={props.state.alt} />\n            <span className=\"weather-temperature\">{props.state.temp}</span>\n          </div>\n          <div className=\"weather-row2\">\n            <span className=\"high-low text-color\">{props.state.hi}&#176;/{props.state.low}&#176; </span>\n            <span className=\"feels text-color\">Humidity: {props.state.humidity}%</span>\n          </div>\n          <div className=\"weather-row3\">\n            <span className=\"condition text-color\">{props.state.condition}</span>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default CurrentWeather;","import React from 'react'\n\nconst Forecast = (props) => {\n  return(\n    <div className=\"forecast-wrapper\">\n        <p className=\"forecast-title text-color\">5-Day Forecast</p>\n        <div className=\"forecast-container\">\n          <div className=\"forecast-col forecast-col1\">\n            <div className=\"forecast-day\">{props.state.day1[0]}</div>\n            <div className=\"forecast-icon\">\n              <img src={`https://openweathermap.org/img/wn/${props.state.day1[1]}.png`} alt=\"icon\"/>\n            </div>\n            <div className=\"forecast-temp\">{props.state.day1[2]}&#176;</div>\n          </div>\n          <div className=\"forecast-col forecast-col2\">\n            <div className=\"forecast-day\">{props.state.day2[0]}</div>\n            <div className=\"forecast-icon\">\n              <img src={`https://openweathermap.org/img/wn/${props.state.day2[1]}.png`} alt=\"icon\"/>\n            </div>\n            <div className=\"forecast-temp\">{props.state.day2[2]}&#176;</div>\n          </div>\n          <div className=\"forecast-col forecast-col3\">\n            <div className=\"forecast-day\">{props.state.day3[0]}</div>\n            <div className=\"forecast-icon\">\n              <img src={`https://openweathermap.org/img/wn/${props.state.day3[1]}.png`} alt=\"icon\"/>\n            </div>\n            <div className=\"forecast-temp\">{props.state.day3[2]}&#176;</div>\n          </div>\n          <div className=\"forecast-col forecast-col4\">\n            <div className=\"forecast-day\">{props.state.day4[0]}</div>\n            <div className=\"forecast-icon\">\n              <img src={`https://openweathermap.org/img/wn/${props.state.day4[1]}.png`} alt=\"icon\"/>\n            </div>\n            <div className=\"forecast-temp\">{props.state.day4[2]}&#176;</div>\n          </div>\n          <div className=\"forecast-col forecast-col5\">\n            <div className=\"forecast-day\">{props.state.day5[0]}</div>\n            <div className=\"forecast-icon\">\n              <img src={`https://openweathermap.org/img/wn/${props.state.day5[1]}.png`} alt=\"icon\"/>\n            </div>\n            <div className=\"forecast-temp\">{props.state.day5[2]}&#176;</div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default Forecast","import React from 'react';\n\nconst UVIndex = (props) => {\n  return(\n    <div className=\"uvindex-wrapper\">\n        <div className=\"uvindex-container\">\n          <div className=\"uvindex-left\">\n            <p className=\"uvindex-title\">UV Index</p>\n          </div>\n          <div className=\"uvindex-right\">\n            <svg className=\"uvindex-icon\" fill={props.state.uvColor} width=\"24\" height=\"24\" viewBox=\"0 0 128 128\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g>\n                <path d=\"M64,30.34c-18.59,0-33.66,15.07-33.66,33.65c0,18.59,15.07,33.66,33.66,33.66 c18.59,0,33.66-15.07,33.66-33.66C97.66,45.41,82.59,30.34,64,30.34z\"/>\n                <path d=\"M56.76,24.21L56.76,24.21h14.49c0.67,0,1.29-0.33,1.68-0.88c0.38-0.54,0.47-1.25,0.24-1.88 L65.92,1.83c-0.3-0.81-1.06-1.34-1.92-1.34s-1.62,0.54-1.92,1.34l-7.25,19.63c-0.23,0.63-0.14,1.33,0.24,1.88 C55.46,23.89,56.09,24.21,56.76,24.21z\" />\n                <path d=\"M97.26,40.99c0.38,0.39,0.91,0.6,1.44,0.6c0.12,0,0.24-0.01,0.36-0.03c0.66-0.12,1.21-0.55,1.5-1.16 l8.76-19.01c0.36-0.78,0.19-1.69-0.41-2.3c-0.61-0.61-1.53-0.77-2.31-0.42L87.6,27.44c-0.61,0.28-1.04,0.84-1.16,1.5 c-0.12,0.66,0.1,1.33,0.56,1.81L97.26,40.99z\"/>\n                <path d=\"M126.18,62.08l-19.64-7.24c-0.63-0.23-1.33-0.14-1.88,0.24c-0.55,0.38-0.87,1-0.87,1.67l0.01,14.49 c0,0.67,0.33,1.3,0.88,1.68c0.35,0.23,0.76,0.36,1.17,0.36c0.24,0,0.48-0.04,0.71-0.13l19.64-7.24c0.8-0.29,1.34-1.06,1.34-1.93 C127.52,63.14,126.99,62.38,126.18,62.08z\"/>\n                <path d=\"M100.56,87.6c-0.28-0.61-0.84-1.04-1.5-1.16c-0.66-0.11-1.34,0.1-1.8,0.57L87.01,97.26 c-0.47,0.47-0.69,1.15-0.57,1.81c0.12,0.65,0.55,1.22,1.16,1.5l19.01,8.76c0.27,0.13,0.56,0.18,0.86,0.18 c0.53,0,1.05-0.21,1.44-0.6c0.61-0.61,0.77-1.52,0.41-2.3L100.56,87.6z\"/>\n                <path d=\"M71.24,103.78L71.24,103.78l-14.49,0.01c-0.67,0-1.29,0.33-1.67,0.88 c-0.38,0.55-0.47,1.25-0.25,1.87l7.25,19.64c0.3,0.8,1.06,1.34,1.92,1.34s1.62-0.54,1.92-1.34l7.25-19.64 c0.23-0.63,0.14-1.33-0.24-1.88C72.54,104.11,71.92,103.78,71.24,103.78z\"/>\n                <path d=\"M30.74,87.01c-0.47-0.47-1.14-0.68-1.8-0.57c-0.66,0.12-1.22,0.55-1.5,1.16l-8.76,19.01 c-0.36,0.78-0.19,1.7,0.42,2.3c0.39,0.39,0.91,0.6,1.44,0.6c0.29,0,0.58-0.06,0.86-0.19l19.01-8.77c0.61-0.28,1.04-0.84,1.16-1.5 c0.12-0.66-0.1-1.33-0.57-1.8L30.74,87.01z\"/>\n                <path d=\"M22.17,73.29c0.41,0,0.82-0.13,1.17-0.37c0.55-0.38,0.88-1.01,0.88-1.68l-0.01-14.49 c0-0.67-0.33-1.29-0.88-1.68c-0.55-0.38-1.25-0.47-1.87-0.24L1.82,62.08c-0.8,0.29-1.34,1.06-1.34,1.92c0,0.85,0.53,1.62,1.34,1.92 l19.65,7.24C21.7,73.25,21.93,73.29,22.17,73.29z\"/>\n                <path d=\"M27.45,40.4c0.28,0.61,0.84,1.04,1.5,1.16c0.12,0.02,0.24,0.03,0.36,0.03c0.54,0,1.06-0.21,1.45-0.6 L41,30.74c0.47-0.48,0.68-1.15,0.56-1.81c-0.12-0.65-0.55-1.21-1.16-1.49l-19.02-8.76c-0.78-0.36-1.69-0.19-2.3,0.42 c-0.61,0.61-0.77,1.52-0.41,2.3L27.45,40.4z\"/>\n              </g>\n            </svg>\n            <p className=\"uvindex-level\">{props.state.uvLevel}</p>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default UVIndex;","import React from 'react'\n\nconst Details = (props) => {\n  return(\n     <div className=\"details-wrapper\">\n        <p className=\"daily-title text-color\">Details</p>\n        <div className=\"details-container\">\n          <div className=\"details-row\">\n            <div className=\"details-icon-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 48 48\">\n                <path fill=\"#FFEB3B\" d=\"M24,27c-6.077,0-11,4.923-11,11h22C35,31.923,30.076,27,24,27z\"/>\n                <path fill=\"#1976D2\" d=\"M3 38H45V42H3z\"/>\n                <path fill=\"#2196F3\" d=\"M26 13L26 18 22 18 22 13 18 13 24 6 30 13z\"/>\n              </svg>\n            </div>\n            <div className=\"details-title-container\">\n              <p className=\"details-title\">Sunrise: </p>\n              <p className=\"details-data\">{props.state.sunrise}</p>\n            </div>\n          </div>\n          <div className=\"details-row\">\n            <div className=\"details-icon-container\">\n              <svg className=\"sunset-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 48 48\">\n                <path fill=\"#FF9800\" d=\"M24,27c-6.077,0-11,4.923-11,11h22C35,31.923,30.076,27,24,27z\"/>\n                <path fill=\"#1976D2\" d=\"M3 38H45V42H3z\"/>\n                <path fill=\"#2196F3\" d=\"M26 11L26 6 22 6 22 11 18 11 24 18 30 11z\"/>\n              </svg>\n            </div>\n            <div className=\"details-title-container\">\n              <p className=\"details-title\">Sunset: </p>\n              <p className=\"details-data\">{props.state.sunset}</p>\n            </div>\n          </div>\n          <div className=\"details-row\">\n            <div className=\"details-icon-container\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\">\n                <path fill=\"#fff\" d=\"M20,21.527V4.006C20,1.793,18.205,0,16,0c-2.209,0-4,1.787-4,4.006v17.521\n                  c-1.228,1.099-2,2.696-2,4.473c0,3.312,2.687,6,6,6c3.312,0,6-2.688,6-6C22,24.223,21.229,22.626,20,21.527z M16,30\n                  c-2.209,0-4-1.791-4-4c0-1.48,0.805-2.773,2-3.465V4.005C14,2.897,14.896,2,16,2c1.111,0,2,0.897,2,2.005v18.53\n                  c1.195,0.691,2,1.984,2,3.465C20,28.209,18.209,30,16,30z\"/>\n                <path fill=\"red\" d=\"M16.986,23.166C16.996,23.115,17,23.062,17,23.009v-4.018C17,18.443,16.557,18,16,18\n                  c-0.553,0-1,0.451-1,0.991v4.018c0,0.054,0.004,0.106,0.013,0.157C13.841,23.574,13,24.689,13,26c0,1.657,1.343,3,3,3s3-1.343,3-3\n                  C19,24.689,18.159,23.574,16.986,23.166z\"/>\n              </svg>\n            </div>\n            <div className=\"details-title-container\">\n              <p className=\"details-title\">Pressure: </p>\n              <p className=\"details-data\">{props.state.pressure} hPa</p>\n            </div>\n          </div>\n          <div className=\"details-row\">\n            <div className=\"details-icon-container\">\n              <svg fill=\"#fff\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M30,14 C30,11.790861 28.2046438,10 26,10 C23.790861,10 22,11.7894101 22,14 L23,14 C23,12.3431458 24.3465171,11 26,11 C27.6568542,11 29,12.3465171 29,14 C29,15.6568542 27.6568766,17 25.9920699,17 L3,17 L3,18 L26.0015293,18 C28.2098237,18 30,16.2046438 30,14 L30,14 Z M21,13 C21,11.3431458 19.6534829,10 18,10 C16.3431458,10 15,11.3420576 15,12.991394 L15,13 L16,13 C16,11.8954305 16.8877296,11 18,11 C19.1045695,11 20,11.8877296 20,13 C20,14.1045695 19.1029399,15 17.9941413,15 L6,15 L6,16 L18.0005775,16 C19.6571128,16 21,14.6534829 21,13 L21,13 Z M25,21 C25,22.1045695 24.1122704,23 23,23 L23,23 C21.8954305,23 21,22.1052949 21,21.0057373 L21,21 L22,21 C22,21.5522847 22.4438648,22 23,22 L23,22 C23.5522847,22 24,21.5561352 24,21 L24,21 C24,20.4477153 23.5510798,20 22.992516,20 L9,20 L9,19 L23.0059397,19 C24.1072288,19 25,19.8877296 25,21 L25,21 L25,21 Z\" id=\"wind\"/>\n              </svg>\n            </div>\n            <div className=\"details-title-container wind-title-container\">\n            <p className=\"details-title\">WindSpeed: </p>\n            <p className=\"details-data\">{props.state.wind} mph</p>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default Details","import React, { Component } from 'react';\nimport moment from 'moment'\nimport InputLocation from \"./Components/InputLocation\"\nimport CurrentWeatherEmpty from \"./Components/CurrentWeatherEmpty\"\nimport CurrentWeather from './Components/CurrentWeather'\nimport Forecast from './Components/Forecast'\nimport UVIndex from './Components/UVIndex'\nimport Details from './Components/Details'\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nclass App extends Component {\n  state = {\n    location: undefined,\n    icon: \"01d\",\n    alt: undefined,\n    date: moment(new Date()).format(\"dddd MMMM D h:mmA\"),\n    temp: undefined,\n    hi: 70,\n    low: 70,\n    humidity: 0,\n    condition: undefined,\n    uvColor: \"green\",\n    uvLevel: \"Low\",\n    day1: [\"Sun\",\"01d\",\"70\"],\n    day2: [\"Mon\",\"01d\",\"70\"],\n    day3: [\"Tue\",\"01d\",\"70\"],\n    day4: [\"Wed\",\"01d\",\"70\"],\n    day5: [\"Thu\",\"01d\",\"70\"],\n    sunrise: \"6AM\",\n    sunset: \"6PM\",\n    pressure: 0,\n    wind: 0,\n    timezone: undefined,\n    error: undefined,\n    userLat: undefined,\n    userLon: undefined,\n  }\n\n  //determine if it's day or night\n  isDay = (time) => {\n    let split = time.split(\",\")\n    const wrapper = document.querySelector(\".main-wrapper\")\n    const textColor = document.querySelectorAll(\".text-color\")\n\n    if (split[0] === \"12\" && split[1] === \"AM\") {\n      wrapper.classList.add(\"night-bg\")\n      wrapper.classList.remove(\"day-bg\")\n      textColor.forEach((el)=> {\n        el.classList.add(\"text-night\")\n        el.classList.remove(\"text-day\")\n      })\n      return \"night\"\n    } else if ( (split[0] >= 6  && split[0] <= 11 && split[1] === \"PM\") || (split[0] <= 6 && split[1] === \"AM\") ) {\n      wrapper.classList.add(\"night-bg\")\n      wrapper.classList.remove(\"day-bg\")\n      textColor.forEach((el)=> {\n        el.classList.add(\"text-night\")\n        el.classList.remove(\"text-day\")\n      })\n      return \"night\"\n    }  else {\n      wrapper.classList.add(\"day-bg\")\n      wrapper.classList.remove(\"night-bg\")\n      textColor.forEach((el)=> {\n        el.classList.add(\"text-day\")\n        el.classList.remove(\"text-night\")\n      })\n      return \"day\"\n    }\n\n  }\n\n  //convert API timezone(in milliseconds) to hours to find offset from GMT\n  getTimeZone = (tz) => {\n    let timezone = tz / 3600\n    return timezone\n  }\n\n  //converting API UV Index number to colors and levels\n  getUV = (uv) => {\n    if (uv >= 0 && uv < 3) {\n      return [\"green\",\"Low\"]\n    } else if (uv >= 3 && uv < 6 )  {\n      return [\"yellow\",\"Moderate\"]\n    } else if (uv >= 6 && uv < 8 )  {\n      return [\"orange\",\"High\"]\n    } else if (uv >= 8 && uv < 11 )  {\n      return [\"red\",\"Very High\"]\n    } else if (uv >= 11)  {\n      return [\"violet\",\"Extreme\"]\n    }\n  }\n\n  //converting UTC time into local time for selected city\n  //utcTime is UTC time from API\n  //offset is number generated from getTimeZone()\n  convertUTC = (utcTime,offset) => {\n    let localTime = moment(new Date(utcTime * 1000)).utcOffset(offset).format(\"h:mm A\")\n    return localTime\n  }\n\n\n  //getting consistent daytime forecast at 3PM each day in every city\n  getForecast = (apiData) => {\n    const list = apiData.list\n    const filter = list.filter((el) => {\n      return  (el.dt_txt.split(\" \"))[1] === \"15:00:00\" \n    })\n    return filter\n  }\n\n  getWeather = async (event) => {\n    try{\n    event.preventDefault()    //prevents button from reloading page\n    const city = event.target.elements.city.value\n    const patternNum = new RegExp(/^\\d{5}$/)\n    const patternABC = new RegExp(/^[A-Za-z]+$/)\n    const emptyWeather = document.querySelector(\".current-weather-empty-wrapper\")\n    const currentWeather = document.querySelector(\".current-weather-wrapper\")\n    \n    //reset the input value\n    document.querySelector(\".location-input\").value = \"\"\n\n    // If user inputs a zip\n    if (patternNum.test(city)) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?zip=${city},us&APPID=${API_KEY}&units=imperial`)\n      const api_zip_forecast = await fetch(`http://api.openweathermap.org/data/2.5/forecast?zip=${city},US&APPID=${API_KEY}&units=imperial`)\n      const zipData = await api_call.json()\n      const zipForecast = await api_zip_forecast.json()\n      const uvIndex = await fetch(`http://api.openweathermap.org/data/2.5/uvi?appid=${API_KEY}&lat=${zipData.coord.lat}&lon=${zipData.coord.lon}`)\n      const uvData = await uvIndex.json()\n      const timeOfDay= (moment().utcOffset(this.getTimeZone(zipData.timezone)).format(\"h,A\"))\n      this.isDay(timeOfDay)\n      const trueForecast = this.getForecast(zipForecast)\n\n      this.setState({\n        location: zipData.name,\n        icon: zipData.weather[0].icon,\n        alt: zipData.weather[0].description,\n        date: moment().utcOffset(this.getTimeZone(zipData.timezone)).format(\"dddd MMMM D h:mmA\"),\n        temp: Math.floor(zipData.main.temp),\n        hi: Math.floor(zipData.main.temp_max),\n        low: Math.floor(zipData.main.temp_min),\n        humidity: Math.floor(zipData.main.humidity),\n        condition: (zipData.weather[0].description)[0].toUpperCase() + (zipData.weather[0].description).slice(1),\n        uvColor: this.getUV(uvData.value)[0],\n        uvLevel: this.getUV(uvData.value)[1],\n        day1: [moment(new Date(trueForecast[0].dt_txt)).format(\"ddd\"), trueForecast[0].weather[0].icon, Math.floor(trueForecast[0].main.temp)],\n        day2: [moment(new Date(trueForecast[1].dt_txt)).format(\"ddd\"), trueForecast[1].weather[0].icon, Math.floor(trueForecast[1].main.temp)],\n        day3: [moment(new Date(trueForecast[2].dt_txt)).format(\"ddd\"), trueForecast[2].weather[0].icon, Math.floor(trueForecast[2].main.temp)],\n        day4: [moment(new Date(trueForecast[3].dt_txt)).format(\"ddd\"), trueForecast[3].weather[0].icon, Math.floor(trueForecast[3].main.temp)],\n        day5: [moment(new Date(trueForecast[4].dt_txt)).format(\"ddd\"), trueForecast[4].weather[0].icon, Math.floor(trueForecast[4].main.temp)],\n        sunrise:this.convertUTC(zipData.sys.sunrise, this.getTimeZone(zipData.timezone)),\n        sunset:this.convertUTC(zipData.sys.sunset, this.getTimeZone(zipData.timezone)),\n        pressure:zipData.main.pressure,\n        wind:zipData.wind.speed,\n        timezone:zipData.timezone,\n      })\n    } else if (patternABC.test(city)) {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${API_KEY}&units=imperial`)\n      const api_forecast = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${API_KEY}&units=imperial`)\n      const weatherData = await api_call.json()\n      const forecastData = await api_forecast.json()\n      const uvIndex = await fetch(`http://api.openweathermap.org/data/2.5/uvi?appid=${API_KEY}&lat=${weatherData.coord.lat}&lon=${weatherData.coord.lon}`)\n      const uvData = await uvIndex.json()\n      const timeOfDay = (moment().utcOffset(this.getTimeZone(weatherData.timezone)).format(\"h,A\"))\n      this.isDay(timeOfDay)\n      const trueForecast = this.getForecast(forecastData)\n\n      this.setState ({\n        location: weatherData.name,\n        icon: weatherData.weather[0].icon,\n        alt: weatherData.weather[0].description,\n        date: moment().utcOffset(this.getTimeZone(weatherData.timezone)).format(\"dddd MMMM D h:mmA\"),\n        temp: Math.floor(weatherData.main.temp),\n        hi: Math.floor(weatherData.main.temp_max),\n        low: Math.floor(weatherData.main.temp_min),\n        humidity: Math.floor(weatherData.main.humidity),\n        condition: (weatherData.weather[0].description)[0].toUpperCase() + (weatherData.weather[0].description).slice(1),\n        uvColor: this.getUV(uvData.value)[0],\n        uvLevel: this.getUV(uvData.value)[1],\n        day1: [moment(new Date(trueForecast[0].dt_txt)).format(\"ddd\"), trueForecast[0].weather[0].icon, Math.floor(trueForecast[0].main.temp)],\n        day2: [moment(new Date(trueForecast[1].dt_txt)).format(\"ddd\"), trueForecast[1].weather[0].icon, Math.floor(trueForecast[1].main.temp)],\n        day3: [moment(new Date(trueForecast[2].dt_txt)).format(\"ddd\"), trueForecast[2].weather[0].icon, Math.floor(trueForecast[2].main.temp)],\n        day4: [moment(new Date(trueForecast[3].dt_txt)).format(\"ddd\"), trueForecast[3].weather[0].icon, Math.floor(trueForecast[3].main.temp)],\n        day5: [moment(new Date(trueForecast[4].dt_txt)).format(\"ddd\"), trueForecast[4].weather[0].icon, Math.floor(trueForecast[4].main.temp)],\n        sunrise:this.convertUTC(weatherData.sys.sunrise, this.getTimeZone(weatherData.timezone)),\n        sunset:this.convertUTC(weatherData.sys.sunset, this.getTimeZone(weatherData.timezone)),\n        pressure:weatherData.main.pressure,\n        wind:weatherData.wind.speed,\n        timezone:weatherData.timezone,\n      })\n    } else {\n      alert(\"Please enter a valid City or ZipCode.\")\n    }\n\n    emptyWeather.classList.add(\"hide\")\n    currentWeather.classList.remove(\"hide\")\n    }\n    catch(err) {\n      alert(\"Please enter in a correct city name or zip!\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App main-wrapper\">\n        <InputLocation getWeather={this.getWeather} />\n        <CurrentWeatherEmpty />\n        <CurrentWeather state={this.state}/>\n        <Forecast state={this.state}/>\n        <UVIndex state={this.state}/>\n        <Details state={this.state}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}